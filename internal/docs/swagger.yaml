basePath: /
definitions:
  auth.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterInput:
    properties:
      department:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  server.CreateTaskInput:
    properties:
      description:
        type: string
      due_date:
        type: string
      status:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  server.UpdateTaskInput:
    properties:
      description:
        type: string
      due_date:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Backend API untuk Workmate (Auth dan Task Manager)
  title: Workmate API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Auth
  /api/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register user baru
      tags:
      - Auth
  /api/tasks:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List task milik user
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Task payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.CreateTaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Buat task
      tags:
      - Tasks
  /api/tasks/{id}:
    delete:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Hapus task
      tags:
      - Tasks
    get:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Detail task
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.UpdateTaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update task
      tags:
      - Tasks
  /healthz:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - Misc
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
